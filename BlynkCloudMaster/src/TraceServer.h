/**
 * @file TraceServer.h
 * @author Abhishek Pandey (abhishekpandey71@gmail.com)
 * @brief Trace server header file
 * @version 0.1
 * @date 2020-07-25
 * 
 * @copyright Copyright (c) 2020
 * 
 */
#ifndef TRACE_SERVER_H_
#define TRACE_SERVER_H_

/**
 * Debug enable
 */
#define DBUG_EN 1

/* This includes the autogenerated header file to your code file 
   auto generated header file has specific formate it should be filename without extention + _TR + .h
   ex: file name is main.c autogenerated header would be main_TR.h
   
   File name has to come from user as i wanted to make this software less dependent on compiler settings 
   but you can still mess with compiler command and give -D TRFILE=<yourfilename without extention > for
   each file, choice is yours  :)
*/
#define TR TR
#define HEADER_NAME(a,b) a##_##b
#define HEADER_TRACE(a,b) <HEADER_NAME(a,b).h>

/**
    Check if user has defined the TRFILE name either in via compiler or in file 
 */
#ifndef TRFILE
  #error "Please define TRFILE macro in your file or in compiler -DTRFILE=FILENAME"
#else if
  #include HEADER_TRACE(TRFILE,TR)
#endif /* TRFILE close*/


#include "stdint.h"
#include "ABTraceCBK.h"

extern void dispatchTraceValue(uint8_t fileID, uint16_t traceId, int args, int value1, int value2, int value3, int value4);
extern void ABTraceCallUserMethod(uint8_t callbackIndex, uint8_t len, uint8_t* data);
extern void ABTraceUserCallHandler();
/** Below Macro expression creates a unique macro for each TRACE* for example TRFILE is main and the Trace function 
 * is called at line number 40 then the macro will be main_40 which will always be unique, now the auto generated file which
 * should be run before compiling the code scan.py generated the header file and the similar macro name with trace number
 * in it */
#define TRIDNAME(a,b) a##_##b
#define TRIDNAME_USE(a,b) TRIDNAME(a,b)

/**
  Type of traces this help the ABTrace server to give the proper visual indication to user to observ what is going on in system
 */
#define ERROR       0 /* Bloody red color Text */
#define INFO        1 /* Gray Color Text */
#define DEBUG       2 /* Blue Color Text */
#define NORMAL      3 /* Black Color Text */
#define WARNING     4 /* Orange */
#define RESET       5 /* Red background */

/*
  Prototype for Trace functions 
*/
#if DBUG_EN == 1
/******TRACE Text ***********/
  #define TRACE(info,module,text)   \
    if (1)                \
    {                             \
      dispatchTraceValue(info,TRIDNAME_USE(TRFILE,__LINE__),0,0,0,0,0);         \
    }

  /*******TRACE Value *********/
  #define TRACE_VALUE(info,module,text,value)   \
    if (1)                \
    {                             \
      dispatchTraceValue(info,TRIDNAME_USE(TRFILE,__LINE__),1,value,0,0,0);         \
    }

  /*******TRACE Value 2*********/
  #define TRACE_VALUE2(info,module,text,value1,value2)   \
    if (1)                \
    {                             \
      dispatchTraceValue(info,TRIDNAME_USE(TRFILE,__LINE__),2,value1,value2,0,0);         \
    }

  /*******TRACE Value 3*********/
  #define TRACE_VALUE3(info,module,text,value1,value2,value3)   \
    if (1)                \
    {                             \
      dispatchTraceValue(info,TRIDNAME_USE(TRFILE,__LINE__),3,value1,value2,value3,0);         \
    }

  /*******TRACE Value 4*********/
  #define TRACE_VALUE4(info,module,text,value1,value2,value3,value4)   \
    if (1)                \
    {                             \
      dispatchTraceValue(info,TRIDNAME_USE(TRFILE,__LINE__),4,value1,value2,value3,value4);         \
    }
#else if
  #define TRACE(module,text) {}
  #define TRACE_VALUE(module,text,value) {}
  #define TRACE_VALUE2(module,text,value,value2) {}
  #define TRACE_VALUE3(module,text,value,value2,value3) {}
  #define TRACE_VALUE3(module,text,value,value2,value3,value4) {}
#endif /* DEBUG_EN */

/* TraceCallbackStruct */
extern ABTraceCallback_t ABTraceCallbackList[]; 

  #define ABTraceInstallCBK(text,user_callback) \
    ABTraceCallbackList[TRIDNAME_USE(TRFILE,__LINE__)].callback = user_callback; \

#endif /* Include close */